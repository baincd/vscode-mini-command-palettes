{
	"publisher": "baincd",
	"name": "mini-command-palettes",
	"displayName": "Mini Command Palettes",
	"description": "Create custom, mini command palettes (quick-pick lists of commands)",
	"version": "0.0.1-BETA1",
	"license": "MIT",
	"engines": {
		"vscode": "^1.32.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/baincd/vscode-mini-command-palette"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"properties": {
				"baincd.mini-command-palettes.paletteConfigs": {
					"type": "object",
					"additionalProperties": {
						"type": "object",
						"properties": {
							"matchOnDescription": {
								"type": "boolean",
								"default": false,
								"description": "An optional flag to include the description when filtering the picks."
							},
							"matchOnDetail": {
								"type": "boolean",
								"default": false,
								"description": "An optional flag to include the detail when filtering the picks."
							},
							"placeHolder": {
								"type": "string",
								"description": "An optional string to show as placeholder in the input box to guide the user what to pick on."
							},
							"title": {
								"type": "string",
								"description": "An optional string that represents the title of the quick pick."
							},
							"commands": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"label": {
											"type": "string",
											"description": "A human-readable string which is rendered prominent. Supports rendering of theme icons (https://code.visualstudio.com/api/references/icons-in-labels#icon-listing) via the $(&lt;name&gt;)-syntax."
										},
										"description": {
											"type": "string",
											"description": "A human-readable string which is rendered less prominent in the same line. Supports rendering of theme icons (https://code.visualstudio.com/api/references/icons-in-labels#icon-listing) via the $(&lt;name&gt;)-syntax."
										},
										"detail": {
											"type": "string",
											"description": "A human-readable string which is rendered less prominent in a separate line. Supports rendering of theme icons (https://code.visualstudio.com/api/references/icons-in-labels#icon-listing) via the $(&lt;name&gt;)-syntax."
										},
										"command": {
											"type": "string",
											"description": "Identifier of the command to execute.  Command IDs can be found from the Keyboard Shortcuts UI editor."
										},
										"commandArgs": {
											"type": "array",
											"description": "Parameters passed to the command function."
										}
									},
									"required": [
										"label",
										"command"
									],
									"description": "Command line in palette",
									"examples": [
										{ "label": "Command Label", "command": "Command ID" }
									]
								},
								"description": "Commands to display in palette",
								"examples": [
									[
										{ "label": "Command Label", "command": "Command ID" },
										{ "label": "Command Label", "command": "Command ID" }
									]
								]
							}
						},
						"description": "Mini command palette",
						"required": [
							"commands"
						],
						"examples": [
							{
								"placeHolder": "placeholder text",
								"commands": [
									{ "label": "Command Label", "command": "Command ID" },
									{ "label": "Command Label", "command": "Command ID" }
								]
							}
						]

					},
					"description": "Configuration of mini command palettes",
					"examples": [
						{
							"my-palette-1": {
								"placeHolder": "placeholder text",
								"commands": [
									{ "label": "Command Label", "command": "Command ID" },
									{ "label": "Command Label", "command": "Command ID" }
								]
							},
							"my-palette-2": {
								"placeHolder": "placeholder text",
								"commands": [
									{ "label": "Command Label", "command": "Command ID" },
									{ "label": "Command Label", "command": "Command ID" }
								]
							}
						}
					]
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"test-compile": "tsc -p ./",
		"lint": "eslint . --ext .ts,.tsx",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/chai": "^4.2.15",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^5.2.6",
		"@types/node": "^12.12.0",
		"@types/vscode": "^1.32.0",
		"@typescript-eslint/eslint-plugin": "^4.16.0",
		"@typescript-eslint/parser": "^4.16.0",
		"chai": "^4.3.4",
		"eslint": "^7.21.0",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"source-map-support": "^0.5.12",
		"ts-loader": "^9.2.3",
		"typescript": "^4.4.3",
		"vscode-test": "^1.3.0",
		"webpack": "^5.53.0",
		"webpack-cli": "^4.8.0"
	}
}
